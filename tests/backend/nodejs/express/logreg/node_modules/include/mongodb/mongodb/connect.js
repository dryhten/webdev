/*
 * small module that connects to a MongoDB
 * credentials should be stored only in this place
 *
 * version 3 - using mongodb instead of mysql, with mongodb package
 * https://www.npmjs.com/package/mongodb
 * */
const credentials = {
    host: "localhost",
    port: "27017",
    user: "notes_user",
    password: "notes_password",
    db: "notes"
};

const mongo_client = require("mongodb").MongoClient;

function connect_to_db(ee, event, args){
    /*
     * connects to mysql db using global var "credentials"
     * "credentials" and this function should be kept in same file
     *
     * ee: event emitter that listens for event
     * callback params: (ret, args)
     *
     * args: args to be passed to event callback
     *   too generic, I don't need this with v2/mongodb
     *
     * event: event to be emitted on ee when done
     *
     * ret {
     *   "success": boolean,
     *   "messages": [string, ...], (array of strings)
     *   "connection": Db object representing the database
     * }
     */
    let connect_str = "mongodb://" + credentials.user + ":" +
	credentials.password + "@" + credentials.host + ":" +
	credentials.port + "/" + credentials.db;

    /*
     * apparently once connect function ends
     * I can still use db for transactions
     * */
    mongo_client.connect(connect_str, function(err, db){
	if (err){
	    let ret = {
		success: false,
		messages: ["Cannot connect to db: " + err.message],
	    }
	    ee.emit(event, ret, args);
	    return;
	}
	let ret = {
	    success: true,
	    messages: ["success"],
	    connection: db,
	}
	ee.emit(event, ret, args);
    });
}

/* exports */
module.exports.connect_to_db = connect_to_db;
