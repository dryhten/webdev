# styleguidist is a package that creates a style guide with all your
# react components for display
https://react-styleguidist.js.org/
https://react-styleguidist.js.org/docs/getting-started.html

# I assume this goes over react, so you need react first
# look in react/refs to set it up
npm install --save-dev react-styleguidist

# by default styleguidist will look for components in src/components
# e.g.
./src/components/Button.js

# you can change this in styleguide.config.js
module.exports = {
  components: [new-path]
}

# you can also group them into sections in styleguide.config.js
module.exports = {
  sections: [
    {
      name: "Introduction",
      content: "docs/introduction.md"
    },
    {
      name: "Documentation",
      sections: [
        {
          name: "Installation",
          content: "docs/installation.md",
          description: "Installation description"
        },
        {
          name: "Configuration",
          content: "docs/configuration.md"
        }
      ]
    },
    {
      name: "UI Components",
      content: "docs/ui.md",
      components: "src/components/ui/*.js"
    }
  ]
}

# props in sections
name = section title
content = markdown file with overview content
components = where the components are located
sections = subsections
description = ?? where does it show
ignore = what shouldn't be included (e.g. individual components?)

# styleguidist needs webpack to run
# by default it looks for webpack.config.js in root dir
# otherwise you need to specify where your webpack file is in styleguidist config file
module.exports = {
  webpackConfig: require("./path/webpack.js");
}

# styleguidist doesn't seem to work with webpack 4+
# since styleguidist uses some plugins not available there
https://github.com/jantimon/html-webpack-plugin/issues/816

# you can run styleguidist like so
styleguidist server

# or add it to npm scripts in package.json

# you need to add documentation to the components to see something in the styleguide
# you can write documentation in JSDoc format
# example in src/components/Button.js
# more on jsdoc
frontend/js/jsdoc/refs

# you need babel transform-class-properties plugin for static variables
# TODO move this somewhere else
https://babeljs.io/docs/plugins/transform-class-properties/
npm install --save-dev babel-plugin-transform-class-properties

# you can also use flow for docs

# to write examples of component you need to make a ComponentName.md or Readme.md
# file in same dir as component

# apparently styleguide uses buble to run the es6 code
# you can use state in examples with initialState = {...}
# and then setState({...}) TODO
https://react-styleguidist.js.org/docs/documenting.html#writing-code-examples

# styleguidist uses react-docgen to generate documentation
https://github.com/reactjs/react-docgen

# you can use other libraries in the readme file

# each component is defined in an independent react root/context
# this happens in a Wrapper component (defined in styleguidist by default)
# you can overwrite the Wrapper like this
module.exports = {
  styleguideComponents: {
    Wrapper: path.join(__dirname, "src/styleguide/Wrapper");
  }
}

# so what I think it happens - styleguidist creates a new html file that will
# take some bundled javascript which will use their components
# https://github.com/styleguidist/react-styleguidist/tree/master/src/rsg-components
# and they add the components you define to display

# you can also change what html file is served with the template prop
# in styleguide.config.js

# the component tree structure is something like this
<StyleGuide>
  <StyleGuideRenderer>
    <Content>
      <Sections>
        <Section>
          <Examples>
            <Playground>
              <Preview>
                <Wrapper>
                </Wrapper>
              </Preview>
            </Playground>
          </Examples>
        </Section>
        <Section>
        </Section>
        ...
      </Sections>
    </Content>
  </StyleGuideRenderer>
</StyleGuide>

# you can replace individual components
# to do this you need to change styleguide.config.js
module.exports = {
  styleguideComponents: {
    Wrapper: [path],
    ...
  }
}

# for a list of what you can specify in styleguide.config.js
https://react-styleguidist.js.org/docs/configuration.html
